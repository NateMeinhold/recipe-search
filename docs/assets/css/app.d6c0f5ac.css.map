{"version":3,"sources":["webpack:///src/components/C:/Users/Nate/SeattleU/projects/Capstone/recipe-search/src/components/src/components/Recipe.vue","app.d6c0f5ac.css","webpack:///src/C:/Users/Nate/SeattleU/projects/Capstone/recipe-search/src/src/App.vue","webpack:///src/components/C:/Users/Nate/SeattleU/projects/Capstone/recipe-search/src/components/src/components/Reveal.vue"],"names":[],"mappings":"AA6EA,oBACA,eC3EA,CD6EA,oBACA,oBAAA,CACA,SC3EA,CD6EA,oBACA,oBAAA,CACA,aC3EA,CD6EA,mBACA,aC3EA,CD8EA,8BACA,YAAA,CACA,aAAA,CACA,aAAA,CACA,yDAAA,CACA,iCC3EA,CDgFA,uBACA,uCAAA,CACA,2BAAA,CACA,2BC9EA,CCNA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aAAA,CACA,eDWA,CCTA,KACA,mEAAA,CACA,2BAAA,CACA,2BDWA,CEqDA,oBACA,eFjDA,CEmDA,oBACA,oBAAA,CACA,SFjDA,CEmDA,oBACA,oBAAA,CACA,aFjDA,CEmDA,mBACA,aFjDA","file":"app.d6c0f5ac.css","sourcesContent":["<template>\n  <div class=\"hello\">\n\n       <h2>Recipe Search</h2>  \n     <p>\n       <router-link to=\"/reveal\">What's for dinner?</router-link>\n       </P>\n       \n    <form v-on:submit.prevent=\"findRecipe\">\n      <p>Find recipes related to: <input type=\"text\" v-model=\"ingredient\"> <button type=\"submit\">Search</button></p>\n    </form>\n    \n    <ul class=\"recipeCards\" v-if=\"results && results.length > 0\">\n      \n      <li class=\"card\" v-for=\"(item, index) of results\" :key=\"index\">\n       <!--the whole thing: {{item}} -->\n        <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"getMeal(item)\">{{item.strMeal}}</button>\n        <!-- Image Thumbnail-->\n        <div id=\"thumbnail\">\n        <img :src=\"item.strMealThumb\" :alt=\"item.strMeal\" height=\"200\" width=\"200\">\n        </div>\n      </li>\n    </ul>\n  \n\n    <div class=\"no-results\" v-else-if=\"results && results.length === 0\">\n      <h2>No Recipes Found</h2>\n      <p>Let's look for somthing else</p>\n    </div>\n<!--Need to ask about error message, it's not loading for some reason -->\n    <ul class=\"errors\" v-if=\"errors && errors.length > 0\">\n      <li v-for=\"(error, index) of errors\" :key=\"index\">\n        {{error.message}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n import axios from 'axios'\n\n export default {\n      name: 'Recipe',\n   data () {\n     return {\n       results: null,\n       errors: [],\n       ingredient: null,\n     }\n   }, \n   methods: {\n     getMeal: function(item) {\n       //when debuging {item} was recorded as \"observer \"\n       this.$router.push({name: \"reveal\", params: {item}})\n       //I thought that the issue might've been in the push but changing item to item.srMeal didn't work\n     },\n   findRecipe: function() {\n     axios.get('https://www.themealdb.com/api/json/v1/1/filter.php', {\n       params: {\n        i: this.ingredient\n       }\n     })\n     .then(response => {\n       this.results = response.data.meals;\n       this.ingredient=\"\"\n     })\n     .catch(error => {\n       this.errors.push(error);\n     });\n   }\n }\n    \n}\n </script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n.recipeCards {\n   display: grid;\n  margin: 0 auto;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: minmax(150px, auto);\n  /* justify-items: center;  need to figure out how to center*/\n\n}\n\n.card{\n  background-image: url('paperTiny: NaNj;');\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n</style>\n","\nh3[data-v-7a6ce534] {\n  margin: 40px 0 0;\n}\nul[data-v-7a6ce534] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-7a6ce534] {\n  display: inline-block;\n  margin: 0 10px;\n}\na[data-v-7a6ce534] {\n  color: #42b983;\n}\n.recipeCards[data-v-7a6ce534] {\n   display: grid;\n  margin: 0 auto;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: minmax(150px, auto);\n  /* justify-items: center;  need to figure out how to center*/\n}\n.card[data-v-7a6ce534]{\n  background-image: url('paperTiny: NaNj;');\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nbody{\n  background-image: url(../../assets/img/cut-board1small.632021c2.jpg);\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n\nh3[data-v-3fcd4e87] {\n  margin: 40px 0 0;\n}\nul[data-v-3fcd4e87] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-3fcd4e87] {\n  display: inline-block;\n  margin: 0 10px;\n}\na[data-v-3fcd4e87] {\n  color: #42b983;\n}\n\n\n\n/*# sourceMappingURL=app.d6c0f5ac.css.map*/","<template>\n  <div id=\"app\">\n    <img alt=\"Veggie Image\" src=\"./assets/veg.jpg\">\n    \n     <router-view/>\n  </div>\n</template>\n\n<script>\nimport Recipe from './components/Recipe.vue'\n// import Home from './components/Home.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    Recipe\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nbody{\n  background-image: url('./assets/cut-board1small.jpg');\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n</style>\n","<template>\n  <div class=\"hello\">\n\n       <h2>Recipe Reveal</h2>\n     <p>\n       <router-link to=\"/\">Home</router-link>\n       </P>\n       \n    <form v-on:submit.prevent=\"findMeal\">\n      <p>Nothing here <input type=\"text\" v-model=\"ingredient\"> <button type=\"submit\">Search</button></p>\n    </form>\n    \n    <ul class=\"Instructions\" v-if=\"results && results.length > 0\">\n      \n      <li class=\"card\" v-for=\"(item, index) of results\" :key=\"index\">\n        <h1>{{item.strMeal}}</h1>\n        <h3>{{item.strCategory}} - {{item.strArea}}</h3>\n        <div id=\"thumbnail\">\n        <img :src=\"item.strMealThumb\" :alt=\"item.strMeal\" height=\"200\" width=\"200\">\n        </div>\n        <ul>\n          <!--make list items to add ingredients {{item.strIngredient1}}-->\n          </ul>\n        <p> {{item.strInstructions}}</p>\n        <h3> link to Youtube </h3> \n      </li>\n    </ul>\n\n    <div class=\"no-results\" v-else-if=\"results && results.length === 0\">\n      <h2>No Recipes Found</h2>\n      <p>Let's look for somthing else</p>\n    </div>\n\n    <ul class=\"errors\" v-if=\"errors && errors.length > 0\">\n      <li v-for=\"(error, index) of errors\" :key=\"index\">\n        {{error.message}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n//import form the first page, then set params with mainly just title to pull in data from 1st call\n\n//colleen's example code:\n// import axios from \"axios\";\n// export default {\n//   name: \"Meal\",\n//   data () {\n//     return {\n//       posts: [],\n//       errors: [],\n//       blog: null,\n//       weather: null\n//     };\n//   },\n//   created () {\n//     this.item = this.$route.params.blog\n//     console.log(this.blog)\n\n\n import axios from 'axios'\n  //turn API call into {{}} mounted call for recipe...maybe\n export default {\n      name: 'Reveal',\n   data () {\n     return {\n       results: null,\n       errors: [],\n       ingredient: null,\n     }\n   }, \n   methods: {\n   findMeal: function() {\n    //  https://www.themealdb.com/api/json/v1/1/search.php?s=Arrabiata ...i think that \"s\" is the param this time\n     axios.get('https://www.themealdb.com/api/json/v1/1/search.php', {\n       params: {\n        s: this.item\n       }\n       //from what I can tell in debuging...no data is being brought to this page. \n     })\n     .then(response => {\n       this.results = response.data.meals;\n       this.meal=\"\"\n     })\n     .catch(error => {\n       this.errors.push(error);\n     });\n   }\n }\n    \n}\n </script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n</style>\n"]}